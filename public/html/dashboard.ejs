<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Growtopia - Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <!-- Add cache control headers -->
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
</head>
<body class="flex flex-col items-center justify-center h-screen bg-[#e0f7fa]">
    <div class="fixed inset-0 flex items-center justify-center">
        <div class="relative bg-[#2b4d6d] border-4 border-[#87b8cc] shadow-lg p-6 w-80 rounded-lg">
            <p class="text-white text-center font-bold text-2xl">Login</p>
            <div id="errorDiv" class="hidden flex flex-col mt-2 text-xs text-red-700 font-bold px-[5px] bg-[#2b4d6d] rounded">
                <a id="errorMessage"></a>
            </div>
            <form 
            method="post"
            action="/player/growid/login/validate"
            accept-charset="UTF-8"
            id="loginForm" class="mt-3">
                <div class="mb-1">
                    <input name="type" value="log" type="hidden" />
                    <input name="_token" value="<%= JSON.stringify(data) %>" type="hidden" />
                    <input name="unique_timestamp" value="<%= Date.now() %>" type="hidden" />
                    <label for="loginGrowId" class="block text-white text-xs">GrowID</label>
                    <div class="flex items-center border-2 border-[#81d4fa] rounded bg-[#2b4d6d] px-1 py-1">
                        <i class="fas fa-user text-white mr-1 text-xs"></i>
                        <input type="text" name="growId" id="loginGrowId" class="w-full bg-[#2b4d6d] text-white text-xs placeholder-white focus:outline-none" placeholder="Enter your growid">
                    </div>
                </div>
                <div class="mb-1">
                    <label for="loginPassword" class="block text-white text-xs">Password</label>
                    <div class="flex items-center border-2 border-[#81d4fa] rounded bg-[#2b4d6d] px-1 py-1">
                        <i class="fas fa-lock text-white mr-1 text-xs"></i>
                        <input type="password" name="password" id="loginPassword" class="w-full bg-[#2b4d6d] text-white text-xs placeholder-white focus:outline-none" placeholder="Enter your password">
                        <button type="button" id="toggleLogPassword" class="text-white ml-2 focus:outline-none text-xs">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>
                <div class="flex justify-end items-center">
                    <button id="loginButton" class="px-2 py-1 rounded bg-[#00b8ff] text-white text-xs hover:bg-[#06a4dd] transition duration-300 ease-in-out transform hover:scale-105">Login</button>
                </div>
            </form>
        </div>
    </div>
    <script>
        // Function to clear all connection and session data
        function clearAllConnectionData() {
            // Clear localStorage items
            localStorage.removeItem('authToken');
            localStorage.removeItem('connId');
            localStorage.removeItem('connTimestamp');
            localStorage.removeItem('sessionActive');
            localStorage.removeItem('lastConnection');
            
            // Clear sessionStorage items
            sessionStorage.clear();
            
            // Clear cookies related to connection
            const cookies = document.cookie.split(";");
            for (let i = 0; i < cookies.length; i++) {
                const cookie = cookies[i];
                const eqPos = cookie.indexOf("=");
                const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
                if (name.trim().startsWith("conn_") || name.trim().startsWith("session_")) {
                    document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/";
                }
            }
        }
        
        document.addEventListener('DOMContentLoaded', function () {
            // Clear all connection data when the page loads
            clearAllConnectionData();
            
            // We can still keep the username for convenience if needed
            if (localStorage.getItem('growId')) {
                document.getElementById('loginGrowId').value = localStorage.getItem('growId');
            }

            const loginGrowId = document.getElementById('loginGrowId').value
            const loginPassword = document.getElementById('loginPassword').value
        });
        
        document.getElementById('loginButton').addEventListener('click', function (event) {
            event.preventDefault();

            // Clear all connection data before logging in
            clearAllConnectionData();

            const loginForm = document.getElementById('loginForm');
            const uName = document.getElementById('loginGrowId').value;
            const uPass = document.getElementById('loginPassword').value;

            if (!uName || !uPass) {
                document.getElementById('errorDiv').classList.remove('hidden');
                document.getElementById('errorMessage').innerHTML = 'Username or Password is empty';
                return;
            } else if (uName.length < 4 || uPass.length < 4) {
                document.getElementById('errorDiv').classList.remove('hidden');
                document.getElementById('errorMessage').innerHTML = 'Username or Password must be at least 4 characters long';
                return;
            } else {
                // Add timestamp to form to ensure uniqueness
                const timestampField = document.createElement('input');
                timestampField.type = 'hidden';
                timestampField.name = 'login_timestamp';
                timestampField.value = Date.now();
                loginForm.appendChild(timestampField);
                
                // Submit the form
                loginForm.submit();
                
                // Store growId for convenience but clear all connection data
                localStorage.setItem('growId', document.getElementById('loginGrowId').value);
                clearAllConnectionData();
            }
        })
        
        document.getElementById('toggleLogPassword').addEventListener('click', function () {
            const LpasswordField = document.getElementById('loginPassword')
            const LpasswordFieldType = LpasswordField.getAttribute('type');
            if (LpasswordFieldType === 'password') {
                LpasswordField.setAttribute('type', 'text');
                this.innerHTML = '<i class="fas fa-eye-slash"></i>';
            } else {
                LpasswordField.setAttribute('type', 'password');
                this.innerHTML = '<i class="fas fa-eye"></i>';
            }
        });
    </script>
</body>
</html>
